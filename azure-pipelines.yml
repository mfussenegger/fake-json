---
jobs:
  - job: LinuxTest
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
      - task: CacheBeta@0
        inputs:
          key: |
            $(Agent.OS)
            $(Build.SourcesDirectory)/stack.yaml.lock
          path: $(HOME)/.stack
        displayName: Cache stack

      - task: CacheBeta@0
        inputs:
          key: |
            $(Agent.OS)
            $(Build.SourcesDirectory)/stack.yaml.lock
          path: .stack-work
        displayName: Cache stack-work

      - script: |
          echo '##vso[task.setvariable variable=mkjson_install_root]'$(stack path --local-install-root)
          stack build --pedantic --flag mkjson:-static --test
        displayName: Run tests

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'mkjson-linux-x86_64'
          targetPath: '$(MKJSON_INSTALL_ROOT)/bin/'

  - job: MacOSTest
    pool:
      vmImage: 'macOS-10.13'
    steps:
      - task: CacheBeta@0
        inputs:
          key: |
            $(Agent.OS)
            $(Build.SourcesDirectory)/stack.yaml.lock
          path: $(HOME)/.stack
        displayName: Cache stack

      - task: CacheBeta@0
        inputs:
          key: |
            $(Agent.OS)
            $(Build.SourcesDirectory)/stack.yaml.lock
          path: .stack-work
        displayName: Cache stack-work

      - script: curl -sSL https://get.haskellstack.org/ | sh
        displayName: Install stack

      - script: |
          echo '##vso[task.setvariable variable=mkjson_install_root]'$(stack path --local-install-root)
          stack build --pedantic --flag mkjson:-static --test

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'mkjson-osx-x86_64'
          targetPath: '$(MKJSON_INSTALL_ROOT)/bin/'

  - job: WindowsTest
    pool:
      vmImage: 'VS2017-Win2016'
    steps:
      - task: CacheBeta@0
        inputs:
          key: |
            $(Agent.OS)
            $(Build.SourcesDirectory)/stack.yaml.lock
          path: $(AppData)/stack
        displayName: Cache stack

      - task: CacheBeta@0
        inputs:
          key: |
            $(Agent.OS)
            $(Build.SourcesDirectory)/stack.yaml.lock
          path: .stack-work
        displayName: Cache stack-work

      - script: choco install haskell-stack
        displayName: Install stack

      - script: stack build --pedantic --flag mkjson:-static --test --copy-bins
        displayName: Run tests

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'mkjson-windows-x86_64'
          targetPath: '$(AppData)\local\bin\'

  - job: Release
    dependsOn:
      - LinuxTest
      - MacOSTest
      - WindowsTest

    steps:
      - script: mkdir -p $(System.DefaultWorkingDirectory)/artifacts/
      - task: DownloadPipelineArtifact@0
        inputs:
          artifactName: 'mkjson-windows-x86_64'
          targetPath: $(System.DefaultWorkingDirectory)/artifacts/

      - task: DownloadPipelineArtifact@0
        inputs:
          artifactName: 'mkjson-osx-x86_64'
          targetPath: $(System.DefaultWorkingDirectory)/artifacts/
      - script: mv $(System.DefaultWorkingDirectory)/artifacts/mkjson{,-osx-x86_64}

      - task: DownloadPipelineArtifact@0
        inputs:
          artifactName: 'mkjson-linux-x86_64'
          targetPath: $(System.DefaultWorkingDirectory)/artifacts/
      - script: mv $(System.DefaultWorkingDirectory)/artifacts/mkjson{,-linux-x86_64}

      - task: GithubRelease@0
        inputs:
          gitHubConnection: 'GitHub connection'
          repositoryName: mfussenegger/mkjson
          target: '$(build.sourceVersion)'
          assets: $(System.DefaultWorkingDirectory)/artifacts/*
          tagSource: 'auto'
          isDraft: true
